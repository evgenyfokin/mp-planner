generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String  @unique
  name     String?
  password String

  workInterval  Int? @default(50) @map("work_interval")
  breakInterval Int? @default(10) @map("break_interval")
  intervalCount Int? @default(7) @map("interval_count")

  tasks           Task[]
  timeBlocks      TimeBlock[]
  PomodoroSession PomodoroSession[]

  @@map("user")
}

model Task {
  id        String   @id @default(cuid())
  createAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String
  priority    Priority
  isCompleted Boolean? @default(false) @map("is_completed")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@map("task")
}

model TimeBlock {
  id        String   @id @default(cuid())
  createAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String
  color    String?
  duration Int
  order    Int     @default(1)

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@map("time_block")
}

model PomodoroSession {
  id        String   @id @default(cuid())
  createAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  isCompleted Boolean? @default(false) @map("is_completed")

  rounds PomodoroRound[]

  @@map("pomodoro_session")
}

model PomodoroRound {
  id        String   @id @default(cuid())
  createAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  pomodoro          PomodoroSession @relation(fields: [pomodoroSessionId], references: [id], onDelete: Cascade)
  pomodoroSessionId String          @map("omodoro_id")

  totalSeconds Int      @map("total_seconds")
  isCompleted  Boolean? @default(false) @map("is_completed")

  @@map("pomodoro_round")
}

enum Priority {
  low
  medium
  high
}
